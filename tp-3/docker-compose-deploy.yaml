version: '3.3'
services:
  web-fe:
    image: apap-registry.cs.ui.ac.id/griselda.neysa/apap-058
    restart: always
    ports:
      - "10058:8080"
    volumes:
      - ./file-storage:/file-storage
      - ./log:/log
    env_file:
      - frontend_web/.env
    networks:
      - frontend-network
      - backend-network

  web-user:
  image: apap-registry.cs.ui.ac.id/griselda.neysa/apap-059
  restart: always
  ports:
    - "10059:8080"
  volumes:
    - ./file-storage:/file-storage
    - ./log:/log
  env_file:
    - user/.env
  depends_on:
    - db-user
  networks:
    - frontend-network
    - backend-network

  db-user:
    image: postgres:14-alpine
    ports:
      - '15059:5432'
    restart: 'no'
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=secret99
    volumes:
      - db-user:/var/lib/postgresql/data
    networks:
      - backend-network

  web-order:
    image: apap-registry.cs.ui.ac.id/griselda.neysa/apap-060
    restart: always
    ports:
      - "10060:8080"
    volumes:
      - ./file-storage:/file-storage
      - ./log:/log
    env_file:
      - order/.env
    depends_on:
      - db-order
    networks:
      - frontend-network
      - backend-network

  db-order:
    image: postgres:14-alpine
    ports:
      - '15060:5432'
    restart: 'no'
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=secret99
    volumes:
      - db-order:/var/lib/postgresql/data
    networks:
      - backend-network

  web-catalog:
    image: apap-registry.cs.ui.ac.id/griselda.neysa/apap-061
    restart: always
    ports:
      - "10061:8080"
    volumes:
      - ./file-storage:/file-storage
      - ./log:/log
    env_file:
      - catalog/.env
    depends_on:
      - db-catalog
    networks:
      - frontend-network
      - backend-network

  db-catalog:
    image: postgres:14-alpine
    ports:
      - '15061:5432'
    restart: 'no'
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=secret99
    volumes:
      - db-catalog:/var/lib/postgresql/data
    networks:
      - backend-network

volumes:
  db-user:
    driver: local
  db-order:
    driver: local
  db-catalog:
    driver: local

networks:
  frontend-network:
    driver: bridge
  backend-network:
    driver: bridge