plugins {
	id 'java'
	id 'org.springframework.boot' version '3.1.5'
	id 'io.spring.dependency-management' version '1.1.3'
}

group = 'apapedia'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'com.github.javafaker:javafaker:1.0.2'
	implementation 'org.mapstruct:mapstruct:1.5.3.Final'
	implementation 'org.springframework.boot:spring-boot-starter-validation:3.0.4'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	runtimeOnly 'org.postgresql:postgresql'
	compileOnly("org.projectlombok:lombok:1.18.26")
	annotationProcessor('org.projectlombok:lombok:1.18.26')
	implementation 'org.mapstruct:mapstruct:1.5.0.Final'
	annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.0.Final'
	implementation 'com.github.javafaker:javafaker:1.0.2'
	implementation 'org.springframework.boot:spring-boot-starter-webflux'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'com.fasterxml.jackson.core:jackson-databind'
	implementation 'jakarta.xml.bind:jakarta.xml.bind-api-parent:4.0.0'
	implementation("io.jsonwebtoken:jjwt-api:0.11.5")
	testImplementation("org.springframework.security:spring-security-test")
	implementation("org.springframework.boot:spring-boot-starter-actuator")
	implementation("com.google.guava:guava:31.1-jre")
    implementation("com.cloudinary:cloudinary-http44:1.5.0")
    implementation("io.micrometer:micrometer-registry-prometheus")
	implementation 'org.glassfish.jaxb:jaxb-runtime:4.0.2'
	implementation 'io.jsonwebtoken:jjwt:0.9.1'
	implementation 'javax.xml.bind:jaxb-api:2.4.0-b180830.0359'
}

tasks.named('test') {
	useJUnitPlatform()
}
